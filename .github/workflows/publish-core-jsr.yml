name: Publish Core JSR

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Deno
        uses: denoland/setup-deno@v2

      - name: Setup Node JS
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/exec @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github

      - name: Create semantic-release config
        working-directory: ./packages/core
        run: |
          cat > .releaserc.json << EOF
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              ["@semantic-release/exec", {
                "prepareCmd": "jq '.version = \"\${nextRelease.version}\"' jsr.json > jsr.json.tmp && mv jsr.json.tmp jsr.json"
              }],
              ["@semantic-release/github", {
                "successComment": true,
                "failTitle": false
              }]
            ]
          }
          EOF

      - name: Run semantic-release with Deno
        working-directory: ./packages/core
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release

      - name: Publish core package
        working-directory: ./packages/core
        run: deno publish
